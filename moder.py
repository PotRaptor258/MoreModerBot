from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message
from tokens import TOKEN, ADMIN_ID, ID, HASH
from pyrogram import Client
import asyncio

"""–°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞ –∏ –∫–ª–∏–µ–Ω—Ç–∞"""
bot = Bot(token=TOKEN)
dp = Dispatcher()
app = Client("Tool", api_id=ID, api_hash=HASH, bot_token=TOKEN, in_memory=True)

"""–§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞ –æ—Ç —É–¥–∞–ª—ë–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
@dp.message(Command(commands=['no_deleted']))
async def no_deleted(message: Message):
    count = 0
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É –∏–ª–∏ –∫–∞–Ω–∞–ª"""
    if message.chat.type in ['group', 'supergroup', 'channel']:
        try:
            """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
            if message.from_user.id in [admin.user.id for admin in await bot.get_chat_administrators(message.chat.id)] and not message.from_user.is_bot:
                """–ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞"""
                try:
                    await app.start()
                except:
                    pass
                """–ü–µ—Ä–µ–±–æ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞"""
                async for member in app.get_chat_members(chat_id=message.chat.id):
                    if member.user.is_deleted:
                        await bot.ban_chat_member(message.chat.id, member.user.id)
                        count += 1
                """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞"""
                try:
                    await app.stop()
                except:
                    pass

            await message.reply(f"–£–±—Ä–∞–Ω–æ —É–¥–∞–ª—ë–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑ —á–∞—Ç–∞: {count}")

        except Exception as e:
            await message.reply("–û—à–∏–±–∫–∞!")
            await bot.send_message(ADMIN_ID, str(e))
    else:
        await message.reply("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –∑–¥–µ—Å—å!")


"""–§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
@dp.message(Command(commands=['clear_messages']))
async def no_deleted(message: Message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É"""
    if message.chat.type in ['group', 'supergroup']:
        try:
            await bot.ban_chat_member(chat_id, user_id, revoke_messages=True)
            await bot.unban_chat_member(chat_id, user_id)
            await message.reply("–°–æ–æ–±—â–µ–Ω–∏—è –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã!")
        except Exception as e:
            await message.reply("–û—à–∏–±–∫–∞!")
            await bot.send_message(ADMIN_ID, str(e))
    else:
        await message.reply("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –∑–¥–µ—Å—å!")


@dp.message()
async def start(message: Message):
    if message.chat.id == message.from_user.id:
        await message.reply('üëã')


async def on_startup():
    bot_info = await bot.get_me()
    await bot.send_message(ADMIN_ID, f'–ë–æ—Ç @{bot_info.username} –≤–∫–ª—é—á—ë–Ω')


async def on_shutdown():
    bot_info = await bot.get_me()
    await bot.send_message(ADMIN_ID, f'–ë–æ—Ç @{bot_info.username} –≤—ã–∫–ª—é—á–µ–Ω')


async def main():
    dp.startup.register(on_startup)
    dp.shutdown.register(on_shutdown)
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
